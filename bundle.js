(()=>{"use strict";var n={365:(n,e,r)=>{r.d(e,{A:()=>l});var t=r(354),o=r.n(t),a=r(314),i=r.n(a)()(o());i.push([n.id,'/* Basic styling with a navy-inspired theme */\nbody {\n  font-family: "Segoe UI", Arial, sans-serif;\n  text-align: center;\n  background-color: #0b2742; /* Navy background */\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 1rem;\n  color: #fff;\n}\n\nh1 {\n  margin-bottom: 1rem;\n}\n\n/* Board Container */\n.board-container {\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-start;\n  margin-top: 1rem;\n  gap: 2rem;\n}\n\n.b1,\n.b2 {\n  background-color: #133b5c;\n  padding: 1rem;\n  border-radius: 6px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n  min-width: 300px;\n  margin-bottom: 1rem;\n}\n\n/* Board & Cells */\n.board {\n  pointer-events: auto;\n  display: inline-block;\n  background-color: #1e5f74;\n  padding: 0.25rem;\n  border-radius: 4px;\n}\n.board.disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n.row {\n  display: flex;\n}\n\n.cell {\n  background-color: #3aafbf;\n  text-align: center;\n  box-sizing: border-box;\n  border: 1px solid #e2e2e2;\n  width: 32px;\n  height: 32px;\n  margin: 1px;\n  font-weight: bold;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n.cell:hover {\n  background-color: #56c4d9;\n}\n\n/* Hits & Misses */\n.hit {\n  background-color: #d9534f !important;\n  border-color: #b52d2a !important;\n}\n.miss {\n  background-color: #848484 !important;\n  border-color: #666 !important;\n}\n\n/* Overlays for mode selection, pass screen, etc. */\n.overlay {\n  position: fixed;\n  top: 0; left: 0;\n  width: 100%; height: 100%;\n  background-color: rgba(0,0,0,0.65);\n  backdrop-filter: blur(4px);\n  z-index: 999;\n  display: none;\n  justify-content: center;\n  align-items: center;\n}\n\n/* Common modal style => text black to avoid white on white */\n.mode-modal,\n.pass-device-modal,\n.endgame-modal {\n  background-color: #fff;\n  color: #000;\n  border-radius: 8px;\n  padding: 1rem 1.5rem;\n  min-height: 120px;\n  min-width: 280px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.mode-button,\n.pass-button,\n.endgame-button {\n  background-color: #1e5f74;\n  border: none;\n  border-radius: 4px;\n  height: 36px;\n  width: 140px;\n  color: #fff;\n  font-size: 1rem;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  transition: background-color 0.2s;\n}\n.mode-button:hover,\n.pass-button:hover,\n.endgame-button:hover {\n  background-color: #3aafbf;\n}\n\n/* Turn Indicator */\n.turn-text {\n  color: #fff;\n  background-color: #1e5f74;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  margin: 1rem auto;\n  display: inline-block;\n  box-shadow: 0 0 6px rgba(0,0,0,0.2);\n  font-size: 1.2rem;\n}\n\n/* Ship Placement UI panel => text black */\n.shipPlacementUI {\n  background-color: #fff;\n  color: #000;\n  border-radius: 8px;\n  padding: 1rem;\n  margin: 0 auto 1rem auto;\n  width: 280px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\n}\n.shipPlacementUI h2 {\n  color: #000;\n}\n.shipPlacementUI p {\n  color: #000;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,6CAA6C;AAC7C;EACE,0CAA0C;EAC1C,kBAAkB;EAClB,yBAAyB,EAAE,oBAAoB;EAC/C,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA,oBAAoB;AACpB;EACE,aAAa;EACb,6BAA6B;EAC7B,uBAAuB;EACvB,gBAAgB;EAChB,SAAS;AACX;;AAEA;;EAEE,yBAAyB;EACzB,aAAa;EACb,kBAAkB;EAClB,sCAAsC;EACtC,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,kBAAkB;AAClB;EACE,oBAAoB;EACpB,qBAAqB;EACrB,yBAAyB;EACzB,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,sBAAsB;EACtB,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,WAAW;EACX,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;AACA;EACE,yBAAyB;AAC3B;;AAEA,kBAAkB;AAClB;EACE,oCAAoC;EACpC,gCAAgC;AAClC;AACA;EACE,oCAAoC;EACpC,6BAA6B;AAC/B;;AAEA,mDAAmD;AACnD;EACE,eAAe;EACf,MAAM,EAAE,OAAO;EACf,WAAW,EAAE,YAAY;EACzB,kCAAkC;EAClC,0BAA0B;EAC1B,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA,6DAA6D;AAC7D;;;EAGE,sBAAsB;EACtB,WAAW;EACX,kBAAkB;EAClB,oBAAoB;EACpB,iBAAiB;EACjB,gBAAgB;EAChB,oCAAoC;EACpC,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;;;EAGE,yBAAyB;EACzB,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,eAAe;EACf,eAAe;EACf,kBAAkB;EAClB,iCAAiC;AACnC;AACA;;;EAGE,yBAAyB;AAC3B;;AAEA,mBAAmB;AACnB;EACE,WAAW;EACX,yBAAyB;EACzB,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,qBAAqB;EACrB,mCAAmC;EACnC,iBAAiB;AACnB;;AAEA,0CAA0C;AAC1C;EACE,sBAAsB;EACtB,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,wBAAwB;EACxB,YAAY;EACZ,oCAAoC;AACtC;AACA;EACE,WAAW;AACb;AACA;EACE,WAAW;AACb",sourcesContent:['/* Basic styling with a navy-inspired theme */\r\nbody {\r\n  font-family: "Segoe UI", Arial, sans-serif;\r\n  text-align: center;\r\n  background-color: #0b2742; /* Navy background */\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0;\r\n  padding: 1rem;\r\n  color: #fff;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* Board Container */\r\n.board-container {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n  margin-top: 1rem;\r\n  gap: 2rem;\r\n}\r\n\r\n.b1,\r\n.b2 {\r\n  background-color: #133b5c;\r\n  padding: 1rem;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\r\n  min-width: 300px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* Board & Cells */\r\n.board {\r\n  pointer-events: auto;\r\n  display: inline-block;\r\n  background-color: #1e5f74;\r\n  padding: 0.25rem;\r\n  border-radius: 4px;\r\n}\r\n.board.disabled {\r\n  pointer-events: none;\r\n  opacity: 0.5;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.cell {\r\n  background-color: #3aafbf;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  border: 1px solid #e2e2e2;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin: 1px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n.cell:hover {\r\n  background-color: #56c4d9;\r\n}\r\n\r\n/* Hits & Misses */\r\n.hit {\r\n  background-color: #d9534f !important;\r\n  border-color: #b52d2a !important;\r\n}\r\n.miss {\r\n  background-color: #848484 !important;\r\n  border-color: #666 !important;\r\n}\r\n\r\n/* Overlays for mode selection, pass screen, etc. */\r\n.overlay {\r\n  position: fixed;\r\n  top: 0; left: 0;\r\n  width: 100%; height: 100%;\r\n  background-color: rgba(0,0,0,0.65);\r\n  backdrop-filter: blur(4px);\r\n  z-index: 999;\r\n  display: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Common modal style => text black to avoid white on white */\r\n.mode-modal,\r\n.pass-device-modal,\r\n.endgame-modal {\r\n  background-color: #fff;\r\n  color: #000;\r\n  border-radius: 8px;\r\n  padding: 1rem 1.5rem;\r\n  min-height: 120px;\r\n  min-width: 280px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\n\r\n.mode-button,\r\n.pass-button,\r\n.endgame-button {\r\n  background-color: #1e5f74;\r\n  border: none;\r\n  border-radius: 4px;\r\n  height: 36px;\r\n  width: 140px;\r\n  color: #fff;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  margin-top: 0.5rem;\r\n  transition: background-color 0.2s;\r\n}\r\n.mode-button:hover,\r\n.pass-button:hover,\r\n.endgame-button:hover {\r\n  background-color: #3aafbf;\r\n}\r\n\r\n/* Turn Indicator */\r\n.turn-text {\r\n  color: #fff;\r\n  background-color: #1e5f74;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  margin: 1rem auto;\r\n  display: inline-block;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.2);\r\n  font-size: 1.2rem;\r\n}\r\n\r\n/* Ship Placement UI panel => text black */\r\n.shipPlacementUI {\r\n  background-color: #fff;\r\n  color: #000;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin: 0 auto 1rem auto;\r\n  width: 280px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n}\r\n.shipPlacementUI h2 {\r\n  color: #000;\r\n}\r\n.shipPlacementUI p {\r\n  color: #000;\r\n}\r\n'],sourceRoot:""}]);const l=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],l=0;l<n.length;l++){var c=n[l],s=t.base?c[0]+t.base:c[0],d=a[s]||0,u="".concat(s," ").concat(d);a[s]=d+1;var A=r(u),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(f);else{var p=o(f,t);t.byIndex=l,e.splice(l,0,{identifier:u,updater:p,references:1})}i.push(u)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var l=r(a[i]);e[l].references--}for(var c=t(n,o),s=0;s<a.length;s++){var d=r(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0;var t=r(72),o=r.n(t),a=r(825),i=r.n(a),l=r(659),c=r.n(l),s=r(56),d=r.n(s),u=r(540),A=r.n(u),f=r(113),p=r.n(f),m=r(365),y={};function b(n){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},b(n)}function v(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,h(t.key),t)}}function h(n){var e=function(n){if("object"!=b(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!=b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==b(e)?e:e+""}y.styleTagTransform=p(),y.setAttributes=d(),y.insert=c().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=A(),o()(m.A,y),m.A&&m.A.locals&&m.A.locals;var C=function(){return n=function n(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.length=e,this.coordinates=r,this.numberOfTimesHit=0},(e=[{key:"getCoordinates",value:function(){return this.coordinates}},{key:"addHit",value:function(){this.numberOfTimesHit++}},{key:"isSunk",value:function(){return this.numberOfTimesHit>=this.length}}])&&v(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function g(n){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},g(n)}function B(n,e){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!r){if(Array.isArray(n)||(r=x(n))||e&&n&&"number"==typeof n.length){r&&(n=r);var t=0,o=function(){};return{s:o,n:function(){return t>=n.length?{done:!0}:{done:!1,value:n[t++]}},e:function(n){throw n},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){r=r.call(n)},n:function(){var n=r.next();return i=n.done,n},e:function(n){l=!0,a=n},f:function(){try{i||null==r.return||r.return()}finally{if(l)throw a}}}}function E(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,o,a,i,l=[],c=!0,s=!1;try{if(a=(r=r.call(n)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(t=a.call(r)).done)&&(l.push(t.value),l.length!==e);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(n,e)||x(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(n,e){if(n){if("string"==typeof n)return k(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?k(n,e):void 0}}function k(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=Array(e);r<e;r++)t[r]=n[r];return t}function S(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,w(t.key),t)}}function w(n){var e=function(n){if("object"!=g(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==g(e)?e:e+""}var I=function(){return n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.gameboard=Array.from({length:10},(function(){return Array(10).fill("~")})),this.ships=[]},e=[{key:"getGameboard",value:function(){return this.gameboard}},{key:"canPlaceShip",value:function(n,e,r){var t,o=E(e,2),a=o[0],i=o[1],l=B(this._getCoordinates(n,[a,i],r));try{for(l.s();!(t=l.n()).done;){var c=E(t.value,2),s=c[0],d=c[1];if(s<0||s>9||d<0||d>9)return!1;if(!this.isCellFreeOfShips(s,d))return!1}}catch(n){l.e(n)}finally{l.f()}return!0}},{key:"placeShip",value:function(n,e,r){var t=this,o=E(e,2),a=o[0],i=o[1],l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"S",c=this._getCoordinates(n,[a,i],r),s=new C(n,c);this.ships.push(s),c.forEach((function(n){var e=E(n,2),r=e[0],o=e[1];t.gameboard[r][o]=l}))}},{key:"_getCoordinates",value:function(n,e,r){for(var t=E(e,2),o=t[0],a=t[1],i=[],l=0;l<n;l++){var c=r?o+l:o,s=r?a:a+l;i.push([c,s])}return i}},{key:"isCellFreeOfShips",value:function(n,e){for(var r=-1;r<=1;r++)for(var t=-1;t<=1;t++){var o=n+r,a=e+t;if(o>=0&&o<10&&a>=0&&a<10){var i=this.gameboard[o][a];if("~"!==i&&"M"!==i&&"H"!==i)return!1}}return!0}},{key:"receiveAttack",value:function(n){var e=E(n,2),r=e[0],t=e[1],o=this.gameboard[r][t];return"~"===o?(this.gameboard[r][t]="M",!1):"M"!==o&&"H"!==o&&(this.gameboard[r][t]="H",this._registerHit(r,t),!0)}},{key:"_registerHit",value:function(n,e){var r,t=B(this.ships);try{for(t.s();!(r=t.n()).done;){var o,a=r.value,i=B(a.getCoordinates());try{for(i.s();!(o=i.n()).done;){var l=E(o.value,2),c=l[0],s=l[1];if(c===n&&s===e)return void a.addHit()}}catch(n){i.e(n)}finally{i.f()}}}catch(n){t.e(n)}finally{t.f()}}},{key:"allShipsSunk",value:function(){return this.ships.every((function(n){return n.isSunk()}))}}],e&&S(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function P(n){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},P(n)}function j(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,o,a,i,l=[],c=!0,s=!1;try{if(a=(r=r.call(n)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(t=a.call(r)).done)&&(l.push(t.value),l.length!==e);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(n,e)||function(n,e){if(n){if("string"==typeof n)return T(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?T(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=Array(e);r<e;r++)t[r]=n[r];return t}function O(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,M(t.key),t)}}function M(n){var e=function(n){if("object"!=P(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var r=e.call(n,"string");if("object"!=P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==P(e)?e:e+""}var L=function(){return n=function n(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.board=new I,this.isAI=e,this.attackedCoordinates=[]},e=[{key:"canPlaceShip",value:function(n,e,r){return this.board.canPlaceShip(n,e,r)}},{key:"placeShip",value:function(n,e,r){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"S";this.board.placeShip(n,e,r,t)}},{key:"getGameboard",value:function(){return this.board.getGameboard()}},{key:"receiveAttack",value:function(n){return this.board.receiveAttack(n)}},{key:"areAllShipsSunk",value:function(){return this.board.allShipsSunk()}},{key:"getAIMove",value:function(){var n,e;do{n=Math.floor(10*Math.random()),e=Math.floor(10*Math.random())}while(this.attackedCoordinates.some((function(r){var t=j(r,2),o=t[0],a=t[1];return o===n&&a===e})));return this.attackedCoordinates.push([n,e]),[n,e]}}],e&&O(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function H(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=Array(e);r<e;r++)t[r]=n[r];return t}var W=[5,4,3,3,2,2],Y=new L(!1),U=new L(!1),z=Y,D=U,R=!0,G=!1,X=null,N=0,_=!1,Z=document.getElementById("modeOverlay"),q=document.getElementById("vsFriendBtn"),F=document.getElementById("vsAiBtn"),$=document.getElementById("shipPlacementUI"),J=document.getElementById("placementTitle"),K=document.getElementById("placementInstructions"),V=document.getElementById("toggleRotationBtn"),Q=document.getElementById("donePlacingBtn"),nn=document.getElementById("passOverlay"),en=document.getElementById("board1"),rn=document.getElementById("board2"),tn=(document.getElementById("p1Title"),document.getElementById("p2Title")),on=document.createElement("h1");function an(){X="playerOne",N=0,_=!1,G=!1,$.style.display="block",J.textContent="Player One: Place Your Ships",K.textContent="Place ship of length ".concat(W[0]),Q.disabled=!0,sn(Y,en,!0,!1),sn(U,rn,!1,!1),R||(tn.textContent="Computer")}function ln(){$.style.display="none",G=!0,fn("board1"),dn(),mn()}function cn(n){return 5===n?"C":4===n?"D":3===n?"SM":2===n?"PB":"S"}function sn(n,e,r,t){var o=n.getGameboard();e.innerHTML="";for(var a=function(a){var i=document.createElement("div");i.classList.add("row");for(var l=function(e){var l=document.createElement("div");l.classList.add("cell");var c=o[a][e];t&&"~"!==c&&"M"!==c&&"H"!==c&&(c="~"),"H"===c?l.classList.add("hit"):"M"===c?l.classList.add("miss"):l.textContent="~"===c?"~":c,r&&l.addEventListener("click",(function(){!function(n,e,r){var t=W[N];if(n.canPlaceShip(t,[e,r],_)){var o=cn(t);n.placeShip(t,[e,r],_,o),++N<W.length?(K.textContent="Place ship of length ".concat(W[N]),"playerOne"===X?sn(Y,en,!0,!1):sn(U,rn,!0,!1)):(Q.disabled=!1,K.textContent="All ships placed! Click 'Done Placing'","playerOne"===X?sn(Y,en,!1,!1):sn(U,rn,!1,!1))}else alert("Invalid (clipping or adjacency). Try again!")}(n,a,e)})),i.appendChild(l)},c=0;c<10;c++)l(c);e.appendChild(i)},i=0;i<10;i++)a(i)}function dn(){G&&(z===Y?(un(Y,en,!0),un(U,rn,!1)):(un(U,rn,!0),un(Y,en,!1)))}function un(n,e,r){var t=n.getGameboard();e.innerHTML="";for(var o=function(o){var a=document.createElement("div");a.classList.add("row");for(var i=function(e){var i=document.createElement("div");i.classList.add("cell");var l=t[o][e];"H"===l?i.classList.add("hit"):"M"===l?i.classList.add("miss"):i.textContent="~"===l?"~":r?l:"~",(z===Y&&n===U||z===U&&n===Y)&&G&&i.addEventListener("click",(function(){!function(n,e,r){var t=n.receiveAttack([e,r]);if(n.areAllShipsSunk())return yn(z.isAI?"Computer":z===Y?"Player One":"Player Two"),fn("board1"),void fn("board2");t?z.isAI&&(dn(),An()):z.isAI?D=(z=D)===Y?U:Y:R?(D=(z=z===Y?U:Y)===Y?U:Y,z===Y?(fn("board1"),pn("board2")):(fn("board2"),pn("board1")),function(){if(R){nn.innerHTML="",nn.style.display="flex";var n=document.createElement("div");n.classList.add("pass-device-modal"),nn.appendChild(n);var e=document.createElement("p");e.style.color="black",e.textContent="Pass device to ".concat(z===Y?"Player One":"Player Two"),n.appendChild(e);var r=document.createElement("button");r.classList.add("pass-button"),r.textContent="Resume",r.addEventListener("click",(function(){nn.style.display="none"})),n.appendChild(r),nn.addEventListener("click",(function(n){n.target===nn&&(nn.style.display="none")}))}}()):(z=U,D=Y,An()),dn(),mn()}(n,o,e)})),a.appendChild(i)},l=0;l<10;l++)i(l);e.appendChild(a)},a=0;a<10;a++)o(a)}function An(){for(;;){var n=(o=z.getAIMove(),a=2,function(n){if(Array.isArray(n))return n}(o)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,o,a,i,l=[],c=!0,s=!1;try{if(a=(r=r.call(n)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(t=a.call(r)).done)&&(l.push(t.value),l.length!==e);c=!0);}catch(n){s=!0,o=n}finally{try{if(!c&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(o,a)||function(n,e){if(n){if("string"==typeof n)return H(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?H(n,e):void 0}}(o,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),e=n[0],r=n[1],t=D.receiveAttack([e,r]);if(D.areAllShipsSunk())return yn("Computer"),fn("board1"),void fn("board2");if(!t){D=(z=D)===Y?U:Y;break}}var o,a;dn(),mn()}function fn(n){document.getElementById(n).classList.add("disabled")}function pn(n){document.getElementById(n).classList.remove("disabled")}function mn(){G?z.isAI?on.textContent="Computer's Turn":on.textContent=z===Y?R?"Player One's Turn":"Your Turn":R?"Player Two's Turn":"???":on.textContent=""}function yn(n){var e=document.createElement("div");e.classList.add("overlay"),e.style.display="flex";var r=document.createElement("div");r.classList.add("endgame-modal"),e.appendChild(r);var t=document.createElement("p");t.style.color="black",t.textContent="Congrats, ".concat(n,"! All enemy ships are sunk."),r.appendChild(t);var o=document.createElement("button");o.classList.add("endgame-button"),o.textContent="Play Again",o.addEventListener("click",(function(){return location.reload()})),r.appendChild(o),document.body.appendChild(e)}on.classList.add("turn-text"),document.body.appendChild(on),q.addEventListener("click",(function(){R=!0,Z.style.display="none",an()})),F.addEventListener("click",(function(){R=!1,U=new L(!0),D=U,Z.style.display="none",an()})),V.addEventListener("click",(function(){_=!_,V.textContent=_?"Rotate Ship (Vertical)":"Rotate Ship (Horizontal)"})),Q.addEventListener("click",(function(){if("playerOne"===X)if(R){nn.innerHTML="",nn.style.display="flex";var n=document.createElement("div");n.classList.add("pass-device-modal"),nn.appendChild(n);var e=document.createElement("p");e.style.color="black",e.textContent="Pass device to Player Two (so they can place ships).",n.appendChild(e);var r=document.createElement("button");r.classList.add("pass-button"),r.textContent="OK",r.addEventListener("click",(function(){nn.style.display="none",X="playerTwo",N=0,Q.disabled=!0,J.textContent="Player Two: Place Your Ships",K.textContent="Place ship of length ".concat(W[0]),sn(Y,en,!1,!0),sn(U,rn,!0,!1)})),n.appendChild(r)}else!function(n){for(var e=0,r=W;e<r.length;e++)for(var t=r[e];;){var o=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),i=Math.random()<.5;if(n.canPlaceShip(t,[o,a],i)){n.placeShip(t,[o,a],i,cn(t));break}}}(U),ln();else ln()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,